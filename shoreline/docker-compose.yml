services:
  base:
    build:
      context: ../docker
      dockerfile: ../docker/base/Dockerfile
    image: registry.gitlab.com/surfliner/surfliner/base

  web:
    build:
      context: ..
      dockerfile: shoreline/Dockerfile
      target: shoreline-dev
    image: shoreline:development
    env_file:
      - .env
    volumes:
      - .:/home/shoreline/app
    depends_on:
      - db_migrate
      - postgres
      - solr
      - geoserver
    stdin_open: true
    tty: true
    ports:
     - '3000:3000'
    networks:
      - shoreline

  db_migrate:
    image: shoreline:development
    env_file:
      - .env
    command:
      - sh
      - -c
      - >
        db-setup.sh
        && bundle exec rake "shoreline:staging_area:upload_shapefiles"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010002_lakes.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010002_lakes.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010004_rivers.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010004_rivers.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010005_ssimm_16.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010005_ssimm_16.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010006_gps_roadsutm.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010006_gps_roadsutm.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010007_archr.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010007_archr.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010011_belfor1r.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010011_belfor1r.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010012_belfor2r.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010012_belfor2r.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010013_belfor3r.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010013_belfor3r.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/gford-20140000-010014_belfor4r.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010014_belfor4r.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/SD_City_Recycled_Water_Main_2018_03-d.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/SD_City_Recycled_Water_Main_2018_03-d.zip]"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/Recycled_Water_Main_2016-d.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/Recycled_Water_Main_2016-d.zip]"
    depends_on:
      - postgres
      - minio
    volumes:
      - .:/home/shoreline/app
    networks:
      - shoreline

  geoserver:
    image: kartoza/geoserver:2.22.0
    volumes:
      - shoreline_geoserver_data:/data
    env_file:
      - .env
    ports:
      - '8080:8080'
    networks:
      - shoreline

  postgres:
    extends:
      file: ../docker-compose/common.yaml
      service: postgres
    volumes:
      - "shoreline_db:/bitnami/postgresql"
    env_file:
      - .env
    networks:
      - shoreline

  solr:
    extends:
      file: ../docker-compose/common.yaml
      service: solr
    volumes:
      - ./solr/conf:/opt/shoreline
      - shoreline_solr_data:/bitnami/solr
    env_file:
      - .env
    networks:
      - shoreline

  rabbitmq:
    extends:
      file: ../docker-compose/common.yaml
      service: rabbitmq
    profiles:
      - queue
    ports:
      - "15672:15672"
    networks:
      - shoreline

  minio:
    extends:
      file: ../docker-compose/common.yaml
      service: minio
    volumes:
      - shoreline_minio_data:/data
    env_file:
      - .env
    networks:
      - shoreline

volumes:
  shoreline_db:
  shoreline_geoserver_data:
  shoreline_solr_data:
  shoreline_minio_data:

networks:
  shoreline:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-shoreline

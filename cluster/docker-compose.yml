services:
  base:
    build:
      context: ../docker
      dockerfile: ../docker/base/Dockerfile
    image: registry.gitlab.com/surfliner/surfliner/base

  comet:
    extends:
      file: ../docker-compose/comet.yaml
      service: comet
    env_file:
      - .env
      - comet.env
    depends_on:
      - chrome
      - comet_migrate
      - memcached
      - minio
      - postgres
      - rabbitmq
      - redis
      - solr
      - zk
    volumes:
      - comet-derivatives:/home/comet/app/derivatives
      - comet-public:/home/comet/app/public
      - comet-scripts:/home/comet/app/scripts
      - comet-uploads:/home/comet/app/uploads
    networks:
      - cluster

  comet_sidekiq:
    extends:
      file: ../docker-compose/comet.yaml
      service: sidekiq
    env_file:
      - .env
      - comet.env
    depends_on:
      - comet_migrate
      - memcached
      - minio
      - postgres
      - rabbitmq
      - redis
      - solr
      - zk
    volumes:
      - comet-derivatives:/home/comet/app/derivatives
      - comet-public:/home/comet/app/public
      - comet-scripts:/home/comet/app/scripts
      - comet-uploads:/home/comet/app/uploads
    networks:
      - cluster

  comet_migrate:
    extends:
      file: ../docker-compose/comet.yaml
      service: migrate
    env_file:
      - .env
      - comet.env
    # this has to be set locally or it is overridden by .env
    # https://docs.docker.com/compose/extends/#adding-and-overriding-configuration
    environment:
      - RABBITMQ_ENABLED=false
    depends_on:
      - postgres
    volumes:
      - comet-derivatives:/home/comet/app/derivatives
      - comet-public:/home/comet/app/public
      - comet-scripts:/home/comet/app/scripts
      - comet-uploads:/home/comet/app/uploads
    networks:
      - cluster

  comet_configure_solr:
    extends:
      file: ../docker-compose/comet.yaml
      service: configure_solr
    env_file:
      - .env
      - comet.env
    depends_on:
      - solr
      - zk
    volumes:
      - comet-derivatives:/home/comet/app/derivatives
      - comet-public:/home/comet/app/public
      - comet-scripts:/home/comet/app/scripts
      - comet-uploads:/home/comet/app/uploads
    networks:
      - cluster

  superskunk:
    extends:
      file: ../docker-compose/superskunk.yaml
      service: superskunk
    env_file:
      - .env
      - superskunk.env
    volumes:
      - superskunk_tmp:/home/superskunk/app/tmp
    depends_on:
      - superskunk_migrate
      - postgres
    networks:
      - cluster

  superskunk_migrate:
    extends:
      file: ../docker-compose/superskunk.yaml
      service: migrate
    env_file:
      - .env
      - superskunk.env
    networks:
      - cluster

  shoreline_web:
    build:
      context: ..
      dockerfile: shoreline/Dockerfile
      target: shoreline-dev
    image: shoreline:development
    env_file:
      - .env
      - shoreline.env
    # volumes:
    #   - shoreline-derivatives:/home/shoreline/app/derivatives
    #   - shoreline-public:/home/shoreline/app/public
    #   - shoreline-uploads:/home/shoreline/app/uploads
    depends_on:
      - geoserver
      - postgres
      - shoreline_db_migrate
      - solr
      - zk
    stdin_open: true
    tty: true
    ports:
     - '3001:3000'
    networks:
      - cluster

  shoreline_db_migrate:
    image: shoreline:development
    env_file:
      - .env
      - shoreline.env
    command:
      - sh
      - -c
      - >
        db-setup.sh
        && bundle exec rake "shoreline:staging_area:upload_shapefiles"
        && bundle exec rake "shoreline:ingest_aardvark[spec/fixtures/aardvark-metadata/Polygon_gford_test.json,http://minio:9000/shoreline-staging-area-dev/shapefiles/gford-20140000-010002_lakes.zip]"
    depends_on:
      - postgres
      - minio
      - solr
      - zk
    networks:
      - cluster

  shoreline_configure_solr:
    image: shoreline:development
    env_file:
      - .env
      - shoreline.env
    env_file:
      - .env
      - shoreline.env
    depends_on:
      - solr
      - zk
    command:
      - sh
      - -c
      - >
        while ! nc -z "${SOLR_HOST}" "${SOLR_PORT}"; do echo "--- Waiting for Solr ..."; sleep 5s; done &&
        solrcloud-upload-configset.sh /home/shoreline/app/solr/conf &&
        solrcloud-create-collection.sh
    networks:
      - cluster

  solr:
    extends:
      file: ../docker-compose/common.yaml
      service: solr
    env_file:
      - .env
    volumes:
      - solr:/bitnami/solr
    networks:
      - cluster

  zk:
    extends:
      file: ../docker-compose/common.yaml
      service: zk
    env_file:
      - .env
    volumes:
      - zk:/bitnami/zookeeper
    networks:
      - cluster

  geoserver:
    image: kartoza/geoserver:2.21.2
    volumes:
      - cluster_geoserver_data:/data
    env_file:
      - .env
    ports:
      - '8080:8080'
    networks:
      - cluster

  cantaloupe:
    extends:
      file: ../docker-compose/orange-empire.yaml
      service: cantaloupe
    env_file:
      - .env
    depends_on:
      - minio
    networks:
      - cluster

  rabbitmq:
    extends:
      file: ../docker-compose/common.yaml
      service: rabbitmq
    networks:
      - cluster

  chrome:
    extends:
      file: ../docker-compose/common.yaml
      service: chrome
    networks:
      - cluster

  postgres:
    extends:
      file: ../docker-compose/common.yaml
      service: postgres
    env_file:
      - .env
    volumes:
      - db:/bitnami/postgresql
    networks:
      - cluster

  memcached:
    extends:
      file: ../docker-compose/common.yaml
      service: memcached
    networks:
      - cluster

  minio:
    extends:
      file: ../docker-compose/common.yaml
      service: minio
    env_file:
      - .env
    volumes:
      - minio_data:/data
    networks:
      - cluster

  redis:
    extends:
      file: ../docker-compose/common.yaml
      service: redis
    env_file:
      - .env
    volumes:
      - redis:/bitnami/redis
    networks:
      - cluster

volumes:
  cluster_geoserver_data:
  comet-derivatives:
  comet-public:
  comet-scripts:
  comet-uploads:
  db:
  minio_data:
  redis:
  shoreline-derivatives:
  shoreline-public:
  shoreline-scripts:
  shoreline-uploads:
  solr:
  superskunk_tmp:
  zk:

networks:
  cluster:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-cluster

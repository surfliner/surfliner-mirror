image:
  tag: local
ingress:
  enabled: true
  hosts:
    - host: 'comet.k3d.localhost'
      paths:
        - path: /
livenessProbe:
  enabled: true
  path: "/healthz"
  initialDelaySeconds: 10
readinessProbe:
  enabled: true
  path: "/healthz"
  initialDelaySeconds: 10
skipHyraxEngineSeed: "true"
brandingVolume:
  enabled: false
derivativesVolume:
  enabled: false
uploadsVolume:
  enabled: false
extraInitContainers:
  - name: db-wait
    image: "busybox"
    command:
      - sh
      - -c
      - >-
        while ! nc -z "$DB_HOST" "$DB_PORT"; do
          echo "waiting for $DB_HOST:$DB_PORT"
          sleep 1
        done
    envFrom:
      - configMapRef:
          name: comet-hyrax-env
  - name: ensure-metadata-db-exists
    image: "bitnami/postgresql:latest"
    command:
      - sh
      - -c
      - >-
        echo "Ensuring database: $METADATA_DATABASE_NAME exists";
        PGPASSWORD=$DB_PASSWORD PGHOST=$DB_HOST PGUSER=$DB_USERNAME; export PGPASSWORD PGHOST PGUSER;
        psql -tc "SELECT 1 FROM pg_database WHERE datname = '$METADATA_DATABASE_NAME'" | grep -q 1 ||
        createdb -e -w $METADATA_DATABASE_NAME
    envFrom:
      - configMapRef:
          name: comet-hyrax-env
      - secretRef:
          name: comet-hyrax
    env:
    - name: "METADATA_DATABASE_NAME"
      value: "comet_metadata_development"
extraVolumeMounts:
   - name: local-app
     mountPath: /app/samvera/hyrax-webapp
extraVolumes:
 - name: local-app
   hostPath:
     path: /src
     type: DirectoryOrCreate
worker:
  replicaCount: 1
  extraVolumeMounts:
    - name: local-app
      mountPath: /app/samvera/hyrax-webapp
  extraVolumes:
    - name: local-app
      hostPath:
        path: /src
        type: DirectoryOrCreate
  extraEnvVars:
    - name: "METADATA_DATABASE_NAME"
      value: "comet_metadata_development"
    - name: "RAILS_LOG_TO_STDOUT"
      value: "true"
    - name: "RAILS_ENV"
      value: "development"
extraEnvVars:
  - name: "METADATA_DATABASE_NAME"
    value: "comet_metadata_development"
  - name: "RAILS_LOG_TO_STDOUT"
    value: "true"
  - name: "RAILS_ENV"
    value: "development"
  - name: "RAILS_QUEUE"
    value: "sidekiq"
minio:
  enabled: true
  persistence:
    enabled: true
    size: 1Gi
  accessKey:
    password: comet-access-key
  secretKey:
    password: comet-secret
fcrepo:
  enabled: false
solr:
  persistence:
    enabled: true
    size: 1Gi
  replicaCount: 2
  zookeeper:
    persistence:
      enabled: true
      size: 100Mi
    replicaCount: 3
memcached:
  architecture: standalone
  persistence:
    enabled: false
redis:
  cluster:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 256Mi
postgresql:
  persistence:
    enabled: true
    size: 1Gi

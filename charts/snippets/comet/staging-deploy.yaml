ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 1G
livenessProbe:
  enabled: true
  path: "/healthz"
  initialDelaySeconds: 5
readinessProbe:
  enabled: true
  path: "/healthz"
  initialDelaySeconds: 5
minio:
  enabled: false
fcrepo:
  enabled: false

extraEnvVars:
  - name: "STAGING_AREA_S3_EXAMPLE_FILES"
    value: "1"
extraEnvFrom:
  - configMapRef:
      name: comet-staging-s3-bucket
  - secretRef:
      name: comet-staging-iam-keys
  - secretRef:
      name: comet-staging-oauth
  - secretRef:
      name: comet-staging-ezid-credentials
  - secretRef:
      name: comet-postgres
  - secretRef:
      name: comet-staging-rabbitmq

podSecurityContext:
  runAsUser: 10000
  runAsGroup: 10001
  fsGroup: 10001
  fsGroupChangePolicy: "OnRootMismatch"

worker:
  readinessProbe:
    enabled: true
    command:
      - cat
      - /home/comet/app/tmp/sidekiq_process_has_started_and_will_begin_processing_jobs
    initialDelaySeconds: 10
    periodSeconds: 2
    timeoutSeconds: 1
    failureThreshold: 10
    successThreshold: 2
  replicaCount: 2
  podSecurityContext:
    runAsUser: 10000
    runAsGroup: 10001
    fsGroup: 10001
    fsGroupChangePolicy: "OnRootMismatch"
  resources:
    limits:
      memory: 1Gi
      cpu: 1
    requests:
      memory: 350Mi
      cpu: 500m
  extraEnvFrom:
    - configMapRef:
        name: comet-staging-s3-bucket
    - secretRef:
        name: comet-staging-iam-keys
    - secretRef:
        name: comet-staging-oauth
    - secretRef:
        name: comet-staging-ezid-credentials
    - secretRef:
        name: comet-postgres
    - secretRef:
        name: comet-staging-rabbitmq

resources:
  limits:
    memory: 1Gi
    cpu: 1.5
  requests:
    memory: 350Mi
    cpu: 500m

solr:
  image:
    repository: bitnami/solr
    tag: 8.11.1

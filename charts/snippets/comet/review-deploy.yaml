ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
livenessProbe:
  enabled: true
  path: "/healthz"
  initialDelaySeconds: 10
readinessProbe:
  enabled: true
  path: "/healthz"
  initialDelaySeconds: 10
skipHyraxEngineSeed: "true"
brandingVolume:
  enabled: false
derivativesVolume:
  enabled: false
uploadsVolume:
  enabled: false
extraEnvVars:
  - name: "AUTH_METHOD"
    value: "developer"
  - name: "METADATA_DATABASE_NAME"
    value: "comet_metadata"
  - name: "RAILS_LOG_TO_STDOUT"
    value: "true"
  - name: "REPOSITORY_S3_BUCKET"
    value: "comet-review"
  - name: "STAGING_AREA_S3_BUCKET"
    value: "comet-staging-area-review"
minio:
  enabled: true
  persistence:
    enabled: false
  defaultBuckets: comet-review
  accessKey:
    password: comet-access-key
  secretKey:
    password: comet-secret
fcrepo:
  enabled: false
solr:
  persistence:
    enabled: false
  replicaCount: 2
  zookeeper:
    persistence:
      enabled: false
    replicaCount: 2
memcached:
  architecture: standalone
  persistence:
    enabled: false
redis:
  cluster:
    enabled: false
  master:
    persistence:
      enabled: false
postgresql:
  persistence:
    enabled: false

resources:
  limits:
    memory: 512Mi
    cpu: 500m
  requests:
    memory: 128Mi
    cpu: 50m

worker:
  extraEnvVars:
    - name: "AUTH_METHOD"
      value: "developer"
    - name: "METADATA_DATABASE_NAME"
      value: "comet_metadata"
    - name: "RAILS_LOG_TO_STDOUT"
      value: "true"
    - name: "REPOSITORY_S3_BUCKET"
      value: "comet-review"
    - name: "STAGING_AREA_S3_BUCKET"
      value: "comet-staging-area-review"
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 50m

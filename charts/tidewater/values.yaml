# Default values for starlight.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/surfliner/surfliner/tidewater_web
  name: tidewater_web
  tag: stable
  pullPolicy: Always

# Settings specific to running the OAI-PMH endpoint
oai:
  adminEmail: tidewater@example.com
  metadataProfile: tag:surfliner.github.io,2022:api/oai_dc
  repositoryName: tidewater
  sampleId: 13900
# namespaceIdentifier: item

# Settings specific to the tidewater rails application
rails:
  db_setup_command: "db:migrate"
  environment: production
  log_to_stdout: true
  max_threads: 5
  serve_static_files: true

# Settings specific to the optional tidewater consumer script
consumer:
  replicaCount: 1
  logLevel: info
  enabled: true
  existingSecret:
    name: tidewater-consumer
    enabled: false
  rabbitmq:
    topic: surfliner.metadata
    host: rabbitmq
    routing_key: surfliner.metadata.tidewater
    username: surfliner
    password: surfliner
    port: 5672

# Settings specific to the keypair needed for signing requests
keypair:
  mountPath: "/keys"
  existingSecret:
    name: tidewater-keypair
    enabled: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Set to true if a Secret already exists in the namespace for the Deployment
existingSecret:
  name: tidewater
  enabled: false

# additional volumes and volume mounts, evaluated as a template, e.g.
#
#  extraVolumeMounts
#    - name: local-app
#      mountPath: /home/starlight/app
#  extraVolumes:
#    - name: local-app
#      hostPath:
#        path: /src
#        type: DirectoryOrCreate
extraVolumeMounts: []
extraVolumes: []

# Extra container spec configuration
# Example: (enabling pry debugging for local development)
# Note: with this enabled, one can `kubectl attach` to a running container with a binding.pry breakpoint
#
#extraContainerConfiguration:
# stdin: true
# tty: true
extraContainerConfiguration: []

# additional environment variables, evaluated as a template. e.g.
#
#  extraEnvVars:
#    - name: TEST_SOLR_URL
#      value: "my-test-solr-url"
extraEnvVars: []

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 20m
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: ['tidewater.local']
  tls: []

# see: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
postgresql:
  image:
    repository: bitnami/postgresql
    tag: 12.10.0-debian-10-r5
  enabled: true
  cpu: 1000m
  memory: 1Gi
  postgresqlUsername: tidewater
  postgresqlPassword: tidewater_pass
  postgresqlDatabase: tidewater_db
  postgresqlPostgresPassword: tidewater_admin
  servicePort: 5432
  persistence:
    size: 10Gi

resources: {}

nodeSelector: {}

tolerations: []

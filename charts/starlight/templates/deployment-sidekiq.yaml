apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "starlight.fullname" . }}-sidekiq
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "starlight.name" . }}-sidekiq
      app.kubernetes.io/instance: {{ .Release.Name }}-sidekiq
      component: rails
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "starlight.name" . }}-sidekiq
        app.kubernetes.io/instance: {{ .Release.Name }}-sidekiq
        component: rails
    spec:
      # ensure we run on the same node as the rails server; only required when
      # using PVCs that are ReadWriteOnce
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: component
                  operator: In
                  values:
                    - rails
            topologyKey: kubernetes.io/hostname
      volumes:
        - name: public
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "starlight.fullname" . }}-rails-public
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: cache
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "starlight.fullname" . }}-rails-cache
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: locales
          configMap:
            name: {{ include "starlight.fullname" . }}-locales
            items:
              - key: "blacklight.en.yml"
                path: "blacklight.en.yml"
      initContainers:
      - name: wait-for-rails-deployment
        image: alpine:latest
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: {{ include "starlight.fullname" . }}-env
        args:
        - /bin/sh
        - -c
        - >
          while [ $(wget --server-response --quiet --spider "$HOSTNAME/healthz" 2>&1 | awk 'NR==1{print $2}') -ne 200 ]; do
            echo "waiting for ${HOSTNAME} healthz check to pass"
            sleep 15;
          done
      containers:
        - name: {{ .Chart.Name }}-sidekiq
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: cache
              mountPath: /home/starlight/app/tmp
            - name: public
              mountPath: /home/starlight/app/public/uploads
            - name: locales
              mountPath: /home/starlight/app/config/locales
              readOnly: true
          envFrom:
            - configMapRef:
                name: {{ include "starlight.fullname" . }}-env
            - secretRef:
                name: {{ template "starlight.fullname" . }}
          command: ['sh', '-c', 'bundle exec sidekiq']
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

{{- if .Values.starlight.backups.import.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "starlight.fullname" . }}-migrate-data
  labels:
{{ include "starlight.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": {{ include "starlight.backups.hook" . }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
spec:
  template:
    metadata:
    {{- with .Values.vaultSecret.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "starlight.name" . }}-migrate-data
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ template "starlight.serviceAccountName" . }}
      containers:
      - name: starlight-import
        image: "{{ .Values.util.image.repository }}:{{ .Values.util.image.tag }}"
        imagePullPolicy: "{{ .Values.util.image.pullPolicy }}"
        args: ["/bin/sh", "-c", "postgresql-import.sh && file-sync.sh"]
        envFrom:
          - configMapRef:
              name: {{ include "starlight.fullname" .}}-env
        {{- if not .Values.vaultSecret.enabled }}
          - secretRef:
              name: {{ template "starlight.secretName" . }}
        {{- end }}
        env:
          - name: "DB_BACKUP_SOURCE"
            value: {{ .Values.starlight.backups.import.dbBackupSource }}
          - name: "DB_BACKUP_DESTINATION"
            value: {{ .Values.starlight.backups.import.dbBackupDestination }}
          - name: "DESTINATION_PATH"
            value: s3://{{ .Values.starlight.storage.bucket }}/uploads
          - name: "SOURCE_PATH"
            value: {{ .Values.starlight.backups.import.sourcePath }}
{{- end }}

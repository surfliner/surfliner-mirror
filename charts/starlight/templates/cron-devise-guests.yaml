{{- if .Values.deviseGuestsCronJob.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "starlight.fullname" . }}-devise-cron
  labels:
{{ include "starlight.labels" . | indent 4 }}
spec:
  schedule: {{ .Values.deviseGuestsCronJob.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.deviseGuestsCronJob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.deviseGuestsCronJob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.deviseGuestsCronJob.backoffLimit }}
      template:
        metadata:
        {{- with .Values.vaultSecret.annotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          labels:
            app.kubernetes.io/name: {{ include "starlight.name" . }}-devise-cron
            app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
          serviceAccountName: {{ template "starlight.serviceAccountName" . }}
          containers:
          - name: {{ .Chart.Name }}-devise-cron
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            args: ["/bin/sh", "-c", "bundle exec rake devise_guests:delete_old_guest_users"]
            envFrom:
              - configMapRef:
                  name: {{ include "starlight.fullname" . }}-env
            {{- if not .Values.vaultSecret.enabled }}
              - secretRef:
                  name: {{ template "starlight.secretName" . }}
            {{- end }}
            env:
              {{- toYaml .Values.extraEnvVars | nindent 14 }}
          restartPolicy: Never
{{- end -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "starlight.fullname" . }}-sidekiq
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "starlight.name" . }}-sidekiq
      app.kubernetes.io/instance: {{ .Release.Name }}-sidekiq
      component: rails
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "starlight.name" . }}-sidekiq
        app.kubernetes.io/instance: {{ .Release.Name }}-sidekiq
        component: rails
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      # ensure we run on the same node as the rails server; only required when
      # using PVCs that are ReadWriteOnce
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: component
                  operator: In
                  values:
                    - rails
            topologyKey: kubernetes.io/hostname
      volumes:
        - name: public
          persistentVolumeClaim:
            claimName: rails-public
        - name: cache
          persistentVolumeClaim:
            claimName: rails-cache
      containers:
        - name: {{ .Chart.Name }}-sidekiq
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: cache
              mountPath: /home/starlight/app/tmp
            - name: public
              mountPath: /home/starlight/app/public/uploads
          env:
            - name: "AUTH_METHOD"
              value: {{ .Values.auth.method }}
            - name: "DATABASE_COMMAND"
              value: "db:migrate"
            - name: "DB_ADAPTER"
              value: postgresql
            - name: "FROM_EMAIL"
              value: {{ .Values.email.from_address }}
            - name: "GOOGLE_AUTH_ID"
              value: {{ .Values.auth.google.api_id }}
            - name: "GOOGLE_AUTH_SECRET"
              value: {{ .Values.auth.google.api_secret }}
            - name: "HOSTNAME"
              value: {{ template "starlight.fullname" . }}
            - name: "PORT"
              value: "3000"
            - name: "POSTGRES_DB"
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: "POSTGRES_HOST"
              value: {{ template "starlight.postgresql.fullname" . }}
            - name: "POSTGRES_PORT"
              value: {{ .Values.postgresql.servicePort | quote }}
            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  name: {{ template "starlight.fullname" . }}
                  key: db-username
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "starlight.fullname" . }}
                  key: db-password
            - name: "RAILS_ENV"
              value: production
            - name: "RAILS_MAX_THREADS"
              value: "5"
            - name: "RAILS_QUEUE"
              value: sidekiq
            - name: "RAILS_SERVE_STATIC_FILES"
              value: "true"
            - name: "REDIS_URL"
              value: redis://{{ template "starlight.redis.fullname" . }}-master:6379
            - name: "SECRET_KEY_BASE"
              value: {{ randAlphaNum 20 | b64enc }}
            - name: "SMTP_HOST"
              value: {{ .Values.email.smtp_host }}
            - name: "SOLR_URL"
              value: http://{{ template "starlight.solr.fullname" . }}-svc:8983/solr/collection1
            - name: "SPOTLIGHT_THEMES"
              value: "ucsb,surfliner,ucsd"
          command: ['sh', '-c', 'bundle exec sidekiq']
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

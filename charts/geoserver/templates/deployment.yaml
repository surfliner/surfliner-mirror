apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geoserver.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "geoserver.name" . }}
    helm.sh/chart: {{ include "geoserver.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "geoserver.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "geoserver.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: "data"
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: "{{ include "geoserver.fullname" . }}-data"
          {{ else }}
          emptyDir: {}
          {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "GEOSERVER_DATA_DIR"
              value: /data
            - name: "GEOSERVER_ADMIN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "geoserver.fullname" . }}
                  key: adminPassword
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.healthz }}
              port: http
            failureThreshold: 8
            timeoutSeconds: 5
            periodSeconds: 10
            initialDelaySeconds: 90
          readinessProbe:
            httpGet:
              path: {{ .Values.healthz }}
              port: http
            failureThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 5
            initialDelaySeconds: 90
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: "data"
              mountPath: /data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

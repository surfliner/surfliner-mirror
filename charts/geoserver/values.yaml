# Default values for geoserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: kartoza/geoserver
  tag: 2.20.3
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""
healthz: /geoserver

# Data directory for Geoserver
dataDirectory: /data

# if true, don't rewrite passwords https://github.com/kartoza/docker-geoserver#upgrading-image-to-use-a-specific-version
existingData: false

port: 8080

admin:
  password: geoserver
  username: admin

persistence:
  enabled: true

# Override JVM values
# see: https://github.com/kartoza/docker-geoserver/blob/master/.env#L16-L19
# see: https://docs.geoserver.org/stable/en/user/production/container.html#optimize-your-jvm
# image defaults:
jvm:
  initialMemory: 2G
  maximumMemory: 4G

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: ['geoserver.local']
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  type: ClusterIP
  port: 80

# podSecurityContext:
#   fsGroup: 10001

securityContext: {}

priorityClassName: ''

# recreate is recommendend over rolling update to support volume detach/reattach
updateStrategy: Recreate

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

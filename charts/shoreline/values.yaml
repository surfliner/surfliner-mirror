# Default values for shoreline.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/surfliner/surfliner/shoreline_discovery_app
  name: shoreline_discovery_app
  tag: stable
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

solrRunMode: cloud

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: ['shoreline.local']
  tls: []

# Set to true if a Secret already exists in the namespace for the Deployment
existingSecret:
  name: shoreline
  enabled: false

shoreline:
  disableSolrConfigInit: false
  db_setup_command: "db:migrate"
  geoblacklightDownloadPath: /data/tmp/cache/downloads
  theme: "ucsb"
  # whether to ingest fixture data during deployment
  sample_data:
  suppressTools: false
  email:
    contact_email: shoreline@example.edu
    delivery_method: letter_opener_web # or: smtp
    # see: https://guides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration
    # smtp_settings:
    #   address: smtp.example.edu
    #   port: 587
    #   user_name: username
    #   password: password
    #   authentication: plain

# Configuration for solr chart
# see: https://github.com/helm/charts/blob/master/incubator/solr/values.yaml
solr:
  enabled: true
  image:
    repository: bitnami/solr
    tag: 8.11.1-debian-10-r1
  authentication:
    enabled: true
    adminUsername: admin
    adminPassword: admin
  configName: shorelineconf
  coreName: shoreline # use if solrRunMode is standalone
  collection: collection1 # use if solrRunMode is cloud
  cloudBoostrap: true
  cloudEnabled: true
  # replicas: 3 # scale the stateful set up/down
  # persistence:
  #   enabled: false # uncomment to disable PVCs for disposable solr
  # Settings for solr java memory
  # javaMem: "-Xms2g -Xmx3g"
  # resources: # set k8s memory resources to align with jvm settings
  #   limits:
  #     memory: 3Gi
  #     cpu: 1
  #   requests:
  #     memory: 2Gi
  #     cpu: 250m
  # Settings for zk java memory
  # zookeeper:
  #   env:
  #     JVMFLAGS: "-Xms512m -Xmx1g"
  #   persistence:
  #     enabled: false # uncomment to disable PVCs for disposable zk
  #
  # To use an external/preexisting solr, set solr.enabled to false, then
  #   * set runMode to standalone or cloud
  #   * set solrHostname to external solr FQDN
  #   * set solrPort to external solr port
  #   * set zookeeperHostname to external zookeeper FQDN
  #   * set zookeeperPort to external zookeeper port
  # solrHostname: external-shoreline-solr-fqdn
  # solrPort: "8983"
  # zookeeperHostname: external-shoreline-zookeeper-fqdn
  # zookeeperPort: "2181"
  # If runMode is standalone, then omit zookeeper variables

# Configuration for postgresql chart
# see: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
postgresql:
  nameOverride: database
  image:
    repository: bitnami/postgresql
    tag: 12.9.0-debian-10-r59
  enabled: true
  cpu: 1000m
  memory: 1Gi
  # If postgresql.enabled is false, then
  #   * set postgresqlHostname to external postgresql FQDN
  # postgresqlHostname: external-shoreline-postgresql-fqdn
  postgresqlUsername: shoreline-discovery
  postgresqlPassword: shorelinepass
  postgresqlDatabase: shoreline-discovery
  servicePort: 5432
  persistence:
    size: 10Gi

geoserver:
  enabled: true
  # If geoserver.enabled is false, then
  #   * set geoserverHostname to external geoserver FQDN
  # geoserverHostname: external-shoreline-geoserver-fqdn
  admin:
    username: admin
    password: shorelinegeo
  persistence:
    enabled: true
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 512m
    enabled: true
    hosts: ['geoserver.local']
    tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

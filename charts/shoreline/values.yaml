# Default values for shoreline.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/surfliner/surfliner/shoreline_discovery_app
  name: shoreline_discovery_app
  tag: stable
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: ['shoreline.local']
  tls: []

shoreline:
  theme: ""
  # whether to ingest fixture data during deployment
  sample_data:
  suppressTools: false
  solr:
    collectionName: collection1
  email:
    delivery_method: smtp
    contact_email: noreply@example.com

# Configure environment variables for email chart/container
# see: https://gitlab.com/ucsdlibrary/development/email/
# see: https://github.com/bokysan/docker-postfix#configuration-options
# defaults: allow any email address to send email
email:
  enabled: true
  envVars:
    - name: ALLOWED_SENDER_DOMAINS
      value: ""
    - name: ALLOW_EMPTY_SENDER_DOMAINS
      value: "true"
  service:
    port: 587

# Configuration for solr chart
# see: https://github.com/helm/charts/blob/master/incubator/solr/values.yaml
solr:
  image:
    repository: solr
    tag: 8.6.2

# Configuration for postgresql chart
# see: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
postgresql:
  nameOverride: database
  image:
    repository: bitnami/postgresql
    tag: 12.4.0
  enabled: true
  cpu: 1000m
  memory: 1Gi
  postgresqlUsername: shoreline-discovery
  postgresqlPassword: shorelinepass
  postgresqlDatabase: shoreline-discovery
  servicePort: 5432
  persistence:
    size: 10Gi

geoserver:
  admin:
    password: shorelinegeo
  persistence:
    enabled: true
  ingress:
    enabled: true
    hosts: ['geoserver.local']
    tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

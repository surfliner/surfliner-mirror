{{- $mountPath := .Values.consumers.mountPath -}}
{{- $publicKey := .Values.consumers.publicKey -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "superskunk.fullname" . }}
  labels:
    {{- include "superskunk.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "superskunk.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
      {{- with .Values.existingSecret.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      labels:
        {{- include "superskunk.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "superskunk.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.superskunk.db.standalone }}
      initContainers:
        - name: setup-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          envFrom:
            - configMapRef:
                name: {{ include "superskunk.fullname" . }}-env
            - secretRef:
                name: {{ template "superskunk.secretName" . }}
          env:
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
          command:
            - db-migrate-seed.sh
        {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "superskunk.fullname" . }}-env
            - secretRef:
                name: {{ template "superskunk.secretName" . }}
          env:
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
          {{- if .Values.consumers.keys }}
          volumeMounts:
          {{- range .Values.consumers.keys }}
          - name: {{ .name }}
            mountPath: "{{ $mountPath }}/{{ .name }}/{{ $publicKey }}"
            subPath: {{ $publicKey }}
            readOnly: true
          {{- end }}
          - name: consumer-keys
            mountPath: {{ .Values.consumers.keysFileMountPath }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.superskunk.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.consumers.keys }}
      volumes:
      {{- range .Values.consumers.keys }}
      - name: {{ .name }}
        secret:
          defaultMode: 0400
          secretName: {{ .secretName }}
      {{- end }}
      - name: consumer-keys
        configMap:
          name: {{ include "superskunk.fullname" . }}-consumer-keys
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

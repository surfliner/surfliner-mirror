# Default values for superskunk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/surfliner/surfliner/superskunk
  name: superskunk
  tag: stable
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

superskunk:
  allow_robots: false # allow crawling via robots.txt
  metadata_models:
    - test-metadata
  port: 3000
  db:
    standalone: false # whether to deploy with its own DB instead of connecting to Comet
    metadata_database_name: comet_metadata # default db name if standalone == true
  rails:
    environment: production
    log_to_stdout: true
    serve_static_files: true

# Details about consumer public keys that are available to superskunk
# This might include keys from tidewater, shoreline, etc.
consumers:
  keysFileMountPath: "/config"
  mountPath: "/keys"
  publicKey: "ssh-publickey" # name of public key in Secret
  defaultKeyEnabled: false # whether to use default tidewater chart Secret (for review apps or local testing)
  # keys:
  #   - name: tidewater
  #     secretName: superskunk-default-tidewater-keypair
  #   - name: shoreline
  #     secretName: shoreline-keypair

  # Set to true if a Secret already exists in the namespace for the Deployment
existingSecret:
  name: superskunk
  enabled: false

vaultSecret:
  enabled: false
  vaultFile: /vault/secrets/superskunk.env

# additional environment variables, evaluated as a template. e.g.
#
#  extraEnvVars:
#    - name: RAILS_SERVE_STATIC_FILES
#      value: "1"
#    - name: METADATA_MODELS
#      value: "my_model"
extraEnvVars: []

# see: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
postgresql:
  image:
    repository: bitnami/postgresql
    tag: 12.11.0-debian-10-r23
  enabled: true
  auth:
    database: comet_metadata
    password: superskunk_pass
    postgresPassword: superskunk_admin
    username: superskunk
  primary:
    service:
      ports:
        postgresql: 5432
    persistence:
      size: 10Gi
    resources:
      requests:
        cpu: 1000m
        memory: 1Gi
  readReplicas:
    persistence:
      size: 10Gi
    resources:
      requests:
        cpu: 1000m
        memory: 1Gi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  # className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

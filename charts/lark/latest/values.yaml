# Default values for lark.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/surfliner/surfliner
  name: lark_web
  tag: stable
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

ezid:
  enabled: true
  shoulder: ark:/99999/fk4
  username: apitest
  password: ezid-password

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
  hosts: ['lark.local']
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence_adapters:
  index: solr
  event: sql

# Configuration for postgresql chart
# see: https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  image:
    repository: bitnami/postgresql
    tag: 12.11.0-debian-10-r23
  enabled: true
  auth:
    database: lark-events
    password: larkpass
    postgresPassword: adminpass
    username: lark
  primary:
    service:
      ports:
        postgresql: 5432
    persistence:
      size: 10Gi
    resources:
      cpu: 1000m
      memory: 1Gi
  readReplicas:
    persistence:
      size: 10Gi
    resources:
      cpu: 1000m
      memory: 1Gi

solr:
  enabled: true
  image:
    repository: bitnami/solr
    tag: 8.11.1-debian-10-r163
  auth:
    enabled: true
    adminUsername: admin
    adminPassword: admin
  coreName: lark
  collection: collection1
  cloudBoostrap: true
  cloudEnabled: true
  persistence:
    enabled: true
  zookeeper:
    enabled: true
    persistence:
      enabled: true

lark:
  # whether to import data during deployment
  import_data:
    enabled: false
    data_file: /home/lark/app/spec/fixtures/ucsd-batch-2-concept-v4.csv
  solr:
    collectionName: collection1
    port: 8983
    auth:
      enabled: true
      adminUsername: admin
      adminPassword: admin
  zookeeper:
    port: 2181

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

{{- if .Values.lark.import_data }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "lark.fullname" . }}-import-data
  labels:
    app.kubernetes.io/name: {{ include "lark.name" . }}
    helm.sh/chart: {{ include "lark.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-install
spec:
  template:
    metadata:
      name: {{ include "lark.fullname" . }}-import-data
    spec:
      restartPolicy: Never
      containers:
        - name: import-data
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - >
              db-wait.sh $APP_HOST:$APP_PORT &&
              curl -i -XPOST --data-binary @{{.Values.lark.data_file}} -H "Content-Type: application/json" $APP_URL/batch_import
          envFrom:
            - configMapRef:
                name: {{ include "lark.fullname" . }}-env
            - secretRef:
                name: {{ template "lark.fullname" . }}
{{- end }}
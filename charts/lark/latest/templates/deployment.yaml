apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lark.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "lark.name" . }}
    helm.sh/chart: {{ include "lark.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "lark.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "lark.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      {{- if .Values.solr.enabled }}
        - name: configure-solr
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          envFrom:
            - configMapRef:
                name: {{ include "lark.fullname" . }}-env
            - secretRef:
                name: {{ template "lark.fullname" . }}
          command:
            - sh
            - -c
            - >
              solrcloud-upload-configset.sh /home/lark/app/solr/config &&
              solrcloud-assign-configset.sh
      {{- end }}
      {{- if .Values.postgresql.enabled }}
        - name: db-setup
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "lark.fullname" . }}-env
            - secretRef:
                name: {{ template "lark.fullname" . }}
          command:
            - sh
            - -c
            - db-setup.sh
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "lark.fullname" . }}-env
            - secretRef:
                name: {{ template "lark.fullname" . }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/complete
              port: http
          readinessProbe:
            httpGet:
              path: /healthz/complete
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

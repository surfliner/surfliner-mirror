image: $CI_REGISTRY_IMAGE/builder

stages:
  - prebuild
  - build
  - test

variables:
  DOCKER_DRIVER: overlay

rebuild-base:
  stage: prebuild
  services:
    - name: docker:dind
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/builder .
    - docker push $CI_REGISTRY_IMAGE/builder
  when: manual

lark-code-quality:
  stage: test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - setup_docker
    - cd lark
    - code_quality
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
  only:
    changes:
      - lark/**/*
  except:
    variables:
      - $CODE_QUALITY_DISABLED

starlight-code-quality:
  stage: test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - setup_docker
    - cd starlight
    - code_quality
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
  only:
    changes:
      - starlight/**/*
  except:
    variables:
      - $CODE_QUALITY_DISABLED

lark-ruby-build:
  stage: build
  services:
    - name: docker:dind
  script:
    - cd lark
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/lark_web .
    - docker push $CI_REGISTRY_IMAGE/lark_web
  only:
    changes:
      - .gitlab-ci.yml
      - lark/Dockerfile

lark-unit-tests:
  stage: test
  image: $CI_REGISTRY_IMAGE/lark_web
  script:
    - gem update bundler
    - cd lark && bundle && bundle exec rspec
  only:
    changes:
      - .gitlab-ci.yml
      - Dockerfile
      - lark/**/*

starlight-build:
  stage: build
  services:
    - name: docker:dind
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - cd starlight
    - docker build -t $CI_REGISTRY_IMAGE/starlight_web:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE/starlight_web:$CI_COMMIT_SHA
  only:
    changes:
      - .gitlab-ci.yml
      - Dockerfile
      - starlight/**/*

starlight-test:
  image: $CI_REGISTRY_IMAGE/starlight_web:$CI_COMMIT_SHA
  stage: test
  services:
    - name: solr:7.1-alpine
      alias: solr
      entrypoint: ["docker-entrypoint.sh", "solr-precreate", "starlight-test", "/opt/config"]
  script:
    - cd starlight && bundle exec rspec
  allow_failure: true
  only:
    changes:
      - .gitlab-ci.yml
      - Dockerfile
      - starlight/**/*

# ---------------------------------------------------------------------------

.auto_devops: &auto_devops |
  # helper functions for CI tasks
  [[ "$TRACE" ]] && set -x
  # Extract "MAJOR.MINOR" from CI_SERVER_VERSION and generate "MAJOR-MINOR-stable" for Security Products
  export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')

  function setup_docker() {
    if ! docker info &>/dev/null; then
      if [ -z "$DOCKER_HOST" ]; then
        export DOCKER_HOST='tcp://localhost:2375'
      fi
    fi
  }

  function code_quality() {
    docker run --env SOURCE_CODE="$PWD" \
               --volume "$PWD":/code \
               --volume /var/run/docker.sock:/var/run/docker.sock \
               "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  }

before_script:
  - *auto_devops

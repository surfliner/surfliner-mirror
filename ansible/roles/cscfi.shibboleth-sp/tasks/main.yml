---
# tasks file for shibboleth-sp
- name: Shibboleth-SP | Initialize
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "default.yml"
  when: __shibbolethsp_packages is not defined or shibbolethsp_service_name is not defined

- name: Shibboleth SP | Repository | Add
  yum_repository:
    name: Shibboleth
    description: Shibboleth (Centos 7)
    baseurl: http://download.opensuse.org/repositories/security://shibboleth/CentOS_7/
    gpgkey: http://download.opensuse.org/repositories/security:/shibboleth/CentOS_7//repodata/repomd.xml.key
    gpgcheck: yes
  when: ansible_os_family == "RedHat" or ansible_os_family == "Centos"

- name: Shibboleth SP | Define | Packages
  set_fact:
    shibbolethsp_packages: "{{ __shibbolethsp_packages | list }}"
  when: shibbolethsp_packages is not defined

- name: Shibboleth SP | Install
  package: name={{ item }} state={{ shibbolethsp_state }}
  with_items: "{{ shibbolethsp_packages }}"

- name: Shibboleth SP | Enable | Shibboleth
  service:
    name: "{{ shibbolethsp_service_name }}"
    state: started
    enabled: yes

- name: Shibboleth SP | Metadata | Directory | Create
  file: path=/etc/shibboleth/metadata state=directory

- name: Shibboleth SP | Template | attribute-map.xml
  template: src=attribute-map.xml dest=/etc/shibboleth/attribute-map.xml backup=yes

- name: Shibboleth SP | Configure | Debug | {{ shibbolethsp_debug }}
  xml:
    xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions/x:Handler[@type='Session']"
    attribute: showAttributeValues
    value: "{{ shibbolethsp_debug | lower }}"
    ensure: present
    file: /etc/shibboleth/shibboleth2.xml
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config
  notify: restart shibboleth-sp

- name: Shibboleth SP | Configure | Logging
  lineinfile: dest=/etc/shibboleth/shibd.logger regexp="^#?\s*({{ item.option }}\s*=)" backrefs=yes  line="\\1{{ item.value }}"
  with_items:
    - { option: 'log4j.rootCategory', value: "{{ shibbolethsp_rootcategory }}" }
    - { option: 'log4j.category.Shibboleth.PropertySet', value: "{{ shibbolethsp_propertyset }}" }
    - { option: 'log4j.category.OpenSAML.MessageDecoder', value: "{{ shibbolethsp_messagedecoder }}" }
    - { option: 'log4j.category.OpenSAML.MessageEncoder', value: "{{ shibbolethsp_messageencoder }}" }
    - { option: 'log4j.category.XMLTooling.Signature.Debugger', value: "{{ shibbolethsp_debugger }}" }
  notify: restart shibboleth-sp

- name: Shibboleth SP | Configure | Baseline
  xml:
    xpath: "{{ item.xpath }}"
    attribute: "{{ item.attribute }}"
    value: "{{ item.value }}"
    ensure: "{{ item.ensure }}"
    file: /etc/shibboleth/shibboleth2.xml
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config
  with_items:
    - { xpath: "//x:SPConfig/x:ApplicationDefaults", attribute: entityID, value: "{{ shibbolethsp_entityid }}", ensure: present }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults", attribute: signing, value: "{{ shibbolethsp_signing | lower }}", ensure: present }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults", attribute: encryption, value: "{{ shibbolethsp_encryption | lower }}", ensure: present }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions", attribute: handlerSSL, value: "{{ shibbolethsp_handlerssl | lower }}", ensure: present }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions", attribute: redirectLimit, value: "{{ shibbolethsp_redirectLimit }}", ensure: present }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions", attribute: cookieProps, value: "{{ shibbolethsp_cookieprops }}", ensure: present }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions/x:SSO/@entityID", attribute: "entityID", value: NULL, ensure: absent }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions/x:SSO/@discoveryURL", attribute: "discoveryURL", value: NULL, ensure: absent }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions/x:SSO", attribute: NULL, value: SAML2, ensure: present }
    - { xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions/x:SSO", attribute: "{{ shibbolethsp_ssomethod }}", value: "{{ shibbolethsp_ssourl }}", ensure: present }
  notify: restart shibboleth-sp

- name: Shibboleth SP | Configurables 
  include: shibbolethsp_{{ item }}.yml
  with_items: "{{ configurables }}"
  when: configurables is defined and configurables!=""

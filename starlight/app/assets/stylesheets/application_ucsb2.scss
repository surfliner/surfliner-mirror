@import 'application';
@import 'themes/ucsb2/variables';

// https://gitlab.com/surfliner/surfliner/issues/226
div.st-blocks:last-child {
  padding-bottom: 200px;
}

/* Base Stylings *****/

html,
body {
  margin: 0;
  color: $text-on-light;
  background: $base-white;
  font-family: Avenir, "Century Gothic", sans-serif;
  font-weight: 200;
  line-height: 1.75;
}
body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}
body>* {
  // Each child of body should be in its own stacking context to prevent things
  // in, say, page content from sitting on top of things in, say, the header.
  position: relative;
  z-index: 0;

  :root & {
    // Overrides to what Bootstrap thinks the margins and paddings of these
    // things should be to match the UCSB website.
    //
    // These numbers are awkward because the UCSB website awkwardly specifies
    // everything in awkward pixel counts (.9375rem = 15px), which is a
    // consequence of it being built on Bootstrap 3.
    margin: 0;
    padding: 0 .9375rem;

    @include media-breakpoint-up(lg) {
      // More padding on wider screens. This is the breakpoint the UCSB website
      // uses; I’m not questioning it.
      padding: 0 1.875rem;
    }

    &>* {
      // Each child of body should consist of one or more further children which
      // are centred with this max-width.
      margin: 0 auto;
      max-width: 76.875rem;
    }
  }
}

/* Eyebrow *****/

#eyebrow {
  // Because this appears first, its dropdowns will get covered up by the body
  // content if we don’t give it a positive z-index.
  color: $text-on-dark;
  background: $base-navy;
  font-weight: 100;
  font-size: .75rem;
  line-height: calc(1.25rem);
  letter-spacing: calc(7em / 90);
  z-index: 1;

  * {
    // This bit disables some bootstrap styling. It depends on the fact that id
    // selectors have higher precedence than class selectors, so things will
    // break if you change the above selector to not match by id.
    padding: 0;
  }
  a[href] {
    color: inherit;
  }
  &>nav {
    // This uses a bit of a grid hack: The grid is three columns wide and the
    // collapse menu is two columns, so it will show inline with the title if
    // the button is hidden and on the next row if the button is visible. The
    // third column has a width of zero because content shouldn’t ever actually
    // be slotted in there.
    display: grid;
    position: relative;
    padding: .5rem 0;
    grid: auto-flow / auto auto 0;
    gap: 1rem 0;
    align-items: center;

    .navbar {
      display: contents; // go away bootstrap

      .navbar-toggler {
        box-sizing: content-box;
        margin: -.5em 0 -.5em auto;
        padding: .25em .75em;
        width: 1.5em;
        height: 1.5em;
        font-size: inherit;

        .navbar-toggler-icon {
          display: block;
          width: 100%;
          height: 100%;
        }
      }
    }
  }
}
#user-util-collapse {
  grid-column-end: span 2;
  align-self: stretch;
  letter-spacing: calc(5em / 90);
  text-transform: uppercase;

  &>ul { // the collapse list
    height: 100%;
    gap: 1rem calc(2rem + 1px);

    &>li { // items in the collapse
      display: block;
      position: relative;
      margin: auto 0;

      &.dropdown {
        a:not(:focus-visible) {
          outline: none
        }
        .dropdown-menu {
          top: calc(100% + .5rem);
          left: auto;
          right: calc(-1rem - 1px);
          margin: 0;
          border: none;
          border-radius: 0;
          padding: .5rem 0;
          color: $text-on-dark;
          background: $unofficial-dark-navy;
          text-transform: none;

          .dropdown-item {
            padding: .75rem 1.5rem;
            font-weight: inherit;

            &:hover {
              background: $base-navy;
            }
          }
          .dropdown-divider {
            margin: .5rem .375em;
            border-color: currentcolor;
            opacity: .12;
          }
        }
        &.show::after { // background for activated dropdown
          // This is supposed to cover up the dividers on either side, so it
          // needs to be implemented as an absolutely-positioned block with
          // higher z-index.
          display: block;
          position: absolute;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          margin: -.5rem -.9375rem;
          background: $unofficial-dark-navy;
          z-index: -1;
          content: "";

          @include media-breakpoint-up(md) {
            left: -1px;
            right: -1px;
            margin: -.5rem -1rem;
          }
        }
      }
      @include media-breakpoint-up(md) {
        &+li::before {
          // This creates the dividers between collapse items
          display: block;
          position: absolute;
          top: 0;
          bottom: 0;
          right: 100%;
          margin: auto 1rem;
          height: 2em;
          width: 1px;
          background: currentcolor;
          opacity: .12;
          z-index: -2;
          content: "";
        }
      }
    }
  }
}



/* Site Header *****/

#site-header {
  color: $base-navy;
  background: $lightgray-lighten-6;

  a[href] {
    color: inherit;
  }
  &>div {
    display: flex;
    flex-flow: row wrap;
    padding: 1.25rem 0;
    gap: .5rem;
    justify-content: space-between;
    line-height: 1;

    svg {
      color: inherit;
      fill: currentcolor;
      stroke: transparent;
      height: auto;
      width: 13rem;
    }
  }
}

/* Footer *****/

#footer {
  margin: auto 0 0;
  color: $text-on-dark;
  background: $base-navy;

  a[href] {
    color: inherit;
  }
  strong {
    font-weight: 900;
  }
  &>div {
    // The `repeat(auto-fit, …)` of this grid requires a fixed minimum width for
    // columns; it should match the width of the UC Santa Barbara wordmark. Note
    // that this provides somewhat different (better) breakpoints than the UCSB
    // Drupal theme, which (in typical Bootstrap fashion) fudges it based on
    // screen size and switches to a more vertical layout far sooner than it needs
    // to.
    display: grid;
    padding: 2.25rem .9375rem;
    grid: auto-flow / repeat(auto-fit, minmax(15.625rem, 1fr));
    gap: 0 1.875rem;

    h6 {
      margin: 1.45rem 0 1rem;
      border-bottom: 1px rgba($base-white, .5) solid;
      padding-bottom: .375rem;
      font-size: .75rem;
      line-height: 1.25rem;
      letter-spacing: calc(1em / 12);
      text-transform: uppercase;

      svg {
        display: block;
        margin: -.2rem 0 -.375rem;
        height: 1.875rem;
        width: 15.625rem;
        color: inherit;
        fill: currentcolor;
        stroke: transparent;
      }
    }
    nav {
      // Each nav can have multiple h6‐ul pairs. Don’t stick these in sections.
      // Because they are layed out using grid, they won’t change much at small
      // sizes, so be mindful of how tightly you pack things here.
      display: grid;
      grid: auto auto / auto-flow;

      h6 {
        grid-row: 1 / span 1;
      }
      ul {
        display: grid;
        grid-row: 2 / span 1;
        padding: 0;

        &>li {
          display: block;
        }
        &:only-of-type {
          grid: auto-flow / 1FR 1FR;
        }
        &.social {
          // The grid sizing here is such that two columns equal the width of the
          // wordmark, which is bigger than any social media platform seems to
          // need, but much tighter than the breakpoint in the Drupal theme.
          grid: auto-flow / repeat(auto-fit, minmax(7.625rem, 1fr));
          gap: 0 .375em;

          &>li>a {
            // Use a grid for these because it lets us not worry about whitespace.
            // In the UCSB Drupal theme, the social media icons are outside of the
            // links, but it makes more sense to have them inside.
            display: grid;
            grid: auto-flow / max-content auto;
            gap: 0 .375em;

            svg {
              height: 1.75em;
              color: inherit;
              fill: currentcolor;
              stroke: transparent;
            }
          }
        }
      }
    }
  }
}
#footer-bottom {
  // Most of the complexity in this layout is keeping things together and
  // responsive on small sizes (behaviour does not attempt to mirror the main
  // UCSB Drupal theme for this, which is bad at it). Hence the wrapping
  // flexboxen inside of wrapping flexboxen.
  margin: 0;
  padding: 1rem 1.25rem 3rem;
  color: $base-white;
  background: $unofficial-dark-navy;
  font-size: .75rem;

  a[href] {
    color: inherit;
  }
  p,
  ul,
  table {
    margin: 0;
    width: max-content;
    max-width: 100%;
  }
  &>div {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    gap: .375rem 1rem;

    &>div {
      display: flex;
      flex: auto;
      flex-flow: row wrap;
      width: max-content;
      max-width: 100%;
      gap: .375rem 1rem;

      &>nav {
        display: flex;
        flex-flow: row wrap;
        gap: 0 1rem;

        &>ul {
          display: contents;

          &>li {
            display: block;
          }
        }
      }
    }
    &>table {
      display: flex;
      flex-flow: row wrap;
      gap: 0 1rem;

      &>thead,
      &>tbody,
      &>tfoot {
        display: contents;

        &>tr {
          display: contents;

          &>th,
          &>td {
            display: block;

            &:empty {
              display: none;
            }
          }
        }
      }
    }
  }
}
